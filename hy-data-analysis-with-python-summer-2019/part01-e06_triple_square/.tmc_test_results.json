[{"name": "test.test_triple_square.TripleSquare.test_calls", "status": "failed", "message": "1 not found in [3, 10] : Wrong number of printed lines: 1!", "passed": false, "points": ["p01-06.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e06_triple_square/test/test_triple_square.py\", line 49, in test_calls\n    self.content_helper([3, 10])\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e06_triple_square/test/test_triple_square.py\", line 23, in content_helper\n    self.assertIn(l, countlist, msg=\"Wrong number of printed lines: %i!\" % l)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1089, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_triple_square.TripleSquare.test_calls2", "status": "failed", "message": "1 not found in [3] : Wrong number of printed lines: 1!", "passed": false, "points": ["p01-06.2"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e06_triple_square/test/test_triple_square.py\", line 54, in test_calls2\n    self.content_helper([3])\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e06_triple_square/test/test_triple_square.py\", line 23, in content_helper\n    self.assertIn(l, countlist, msg=\"Wrong number of printed lines: %i!\" % l)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1089, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}]