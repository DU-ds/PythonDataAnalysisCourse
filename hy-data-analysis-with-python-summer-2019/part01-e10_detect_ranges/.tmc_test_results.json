[{"name": "test.test_detect_ranges.DetectRanges.test_first", "status": "failed", "message": "Lists differ: [] != [2, (4, 9), 10, (12, 14)]\n\nSecond list contains 4 additional elements.\nFirst extra element 0:\n2\n\n- []\n+ [2, (4, 9), 10, (12, 14)] : Incorrect result for the input list [2, 5, 4, 8, 12, 6, 7, 10, 13]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 23, in test_first\n    self.assertEqual(result, [2, (4, 9), 10, (12, 14)], msg=\"Incorrect result for the input list %s!\" % L)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1028, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_random", "status": "failed", "message": "Lists differ: [-82, -76, -56, -50, -49, -38, -8, 30, 52, 77] != []\n\nFirst list contains 10 additional elements.\nFirst extra element 0:\n-82\n\n- [-82, -76, -56, -50, -49, -38, -8, 30, 52, 77]\n+ [] : Wrong result for input list [-56, 77, -82, -49, -50, -76, 52, -8, -38, 30]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 40, in test_random\n    self.assertEqual(sorted(L), catenation, msg=\"Wrong result for input list %s!\" % L)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1028, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}]