[{"name": "test.test_positive_list.PositiveList.test_calls", "status": "failed", "message": "Expected 'filter' to have been called.", "passed": false, "points": ["p01-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e17_positive_list/test/test_positive_list.py\", line 33, in test_calls\n    f.assert_called()\n", "  File \"/usr/lib/python3.6/unittest/mock.py\", line 786, in assert_called\n    raise AssertionError(msg)\n"]}, {"name": "test.test_positive_list.PositiveList.test_first", "status": "failed", "message": "Lists differ: [] != [2, 1]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n2\n\n- []\n+ [2, 1] : Wrong result for list [2, -2, 0, 1, -7]!", "passed": false, "points": ["p01-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e17_positive_list/test/test_positive_list.py\", line 21, in test_first\n    self.assertEqual(result, [2,1], msg=\"Wrong result for list %s!\" % L)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1028, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_positive_list.PositiveList.test_random", "status": "failed", "message": "Lists differ: [] != [99, 25, 10, 21, 70, 27, 95, 16, 61, 27, 4[44 chars]3, 5]\n\nSecond list contains 23 additional elements.\nFirst extra element 0:\n99\n\n- []\n+ [99,\n+  25,\n+  10,\n+  21,\n+  70,\n+  27,\n+  95,\n+  16,\n+  61,\n+  27,\n+  44,\n+  25,\n+  27,\n+  85,\n+  24,\n+  78,\n+  60,\n+  66,\n+  94,\n+  81,\n+  97,\n+  33,\n+  5] : Wrong result for list [-60  -3 -44  99  25  10 -87  21  70  27  95 -70  16 -56  61 -71 -78 -99\n  27 -95 -73  44 -60  25  27  85  24  78  60  66 -78  94 -47 -20 -37  81\n -15 -23  97  -9  33 -81 -88 -94 -53 -21 -81 -82 -57   5]!", "passed": false, "points": ["p01-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part01-e17_positive_list/test/test_positive_list.py\", line 28, in test_random\n    self.assertEqual(result, correct, msg=\"Wrong result for list %s!\" % L)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1028, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}]