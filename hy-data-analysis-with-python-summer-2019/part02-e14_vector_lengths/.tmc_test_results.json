[{"name": "test.test_vector_lengths.VectorLengths.test_content", "status": "failed", "message": "Tuples differ: (0,) != (10,)\n\nFirst differing element 0:\n0\n10\n\n- (0,)\n+ (10,)\n?  +\n : Incorrect shape!", "passed": false, "points": ["p02-14.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part02-e14_vector_lengths/test/test_vector_lengths.py\", line 48, in test_content\n    self.assertEqual(v.shape, (n,), msg=\"Incorrect shape!\")\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1039, in assertTupleEqual\n    self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_vector_lengths.VectorLengths.test_main", "status": "failed", "message": "0 not greater than or equal to 1 : You should call the vector_lengths function from the main function!", "passed": false, "points": ["p02-14.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part02-e14_vector_lengths/test/test_vector_lengths.py\", line 62, in test_main\n    msg=\"You should call the vector_lengths function from the main function!\")\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1227, in assertGreaterEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_vector_lengths.VectorLengths.test_no_scipy", "status": "passed", "message": "", "passed": true, "points": ["p02-14.1"], "backtrace": []}, {"name": "test.test_vector_lengths.VectorLengths.test_performance", "status": "passed", "message": "", "passed": true, "points": ["p02-14.1"], "backtrace": []}]