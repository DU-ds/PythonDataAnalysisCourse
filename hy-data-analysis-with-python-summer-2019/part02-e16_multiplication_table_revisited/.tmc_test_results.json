[{"name": "test.test_multiplication_table_revisited.MultiplicationTableRevisited.test_calls", "status": "failed", "message": "Expected 'arange' to have been called.", "passed": false, "points": ["p02-16.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part02-e16_multiplication_table_revisited/test/test_multiplication_table_revisited.py\", line 50, in test_calls\n    parange.assert_called()\n", "  File \"/usr/lib/python3.6/unittest/mock.py\", line 786, in assert_called\n    raise AssertionError(msg)\n"]}, {"name": "test.test_multiplication_table_revisited.MultiplicationTableRevisited.test_content", "status": "failed", "message": "Tuples differ: (0,) != (1, 1)\n\nFirst differing element 0:\n0\n1\n\nSecond tuple contains 1 additional elements.\nFirst extra element 1:\n1\n\n- (0,)\n+ (1, 1) : Incorrect shape!", "passed": false, "points": ["p02-16.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part02-e16_multiplication_table_revisited/test/test_multiplication_table_revisited.py\", line 43, in test_content\n    self.assertEqual(a.shape, (n,n), msg=\"Incorrect shape!\")\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1039, in assertTupleEqual\n    self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}]