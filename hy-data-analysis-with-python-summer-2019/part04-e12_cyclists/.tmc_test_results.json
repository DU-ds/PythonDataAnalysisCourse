[{"name": "test.test_cyclists.Cyclists.test_called", "status": "failed", "message": "1 != 2 : Expected dropna method to be called twice!", "passed": false, "points": ["p04-12.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e12_cyclists/test/test_cyclists.py\", line 58, in test_called\n    msg=\"Expected dropna method to be called twice!\")\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 822, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_cyclists.Cyclists.test_columns", "status": "passed", "message": "", "passed": true, "points": ["p04-12.1"], "backtrace": []}, {"name": "test.test_cyclists.Cyclists.test_shape", "status": "failed", "message": "Tuples differ: (37166, 21) != (37128, 21)\n\nFirst differing element 0:\n37166\n37128\n\n- (37166, 21)\n?     ^^\n\n+ (37128, 21)\n?     ^^\n : Incorrect shape!", "passed": false, "points": ["p04-12.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e12_cyclists/test/test_cyclists.py\", line 24, in test_shape\n    self.assertEqual(df.shape, (37128, 21), msg=\"Incorrect shape!\")\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1039, in assertTupleEqual\n    self.assertSequenceEqual(tuple1, tuple2, msg, seq_type=tuple)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 1010, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\n"]}]