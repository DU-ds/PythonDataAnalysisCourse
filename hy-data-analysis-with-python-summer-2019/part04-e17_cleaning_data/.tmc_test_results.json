[{"name": "test.test_cleaning_data.CleaningData.test_columns", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 27, in test_columns\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_dtypes", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 34, in test_dtypes\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_last", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 46, in test_last\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_president", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.2"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 58, in test_president\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_seasons", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 52, in test_seasons\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_shape", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 22, in test_shape\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_start", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.1"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 40, in test_start\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}, {"name": "test.test_cleaning_data.CleaningData.test_vice_president", "status": "errored", "message": "invalid literal for int() with base 10: 'two'", "passed": false, "points": ["p04-17.2"], "backtrace": ["  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/test/test_cleaning_data.py\", line 65, in test_vice_president\n    df = cleaning_data()\n", "  File \"/home/du_ds/Documents/Git/PythonDataAnalysisCourse/hy-data-analysis-with-python-summer-2019/part04-e17_cleaning_data/src/cleaning_data.py\", line 14, in cleaning_data\n    df[\"Seasons\"] = df[\"Seasons\"].map(int)\n", "  File \"/usr/lib/python3/dist-packages/pandas/core/series.py\", line 2354, in map\n    new_values = map_f(values, arg)\n", "  File \"pandas/_libs/src/inference.pyx\", line 1521, in pandas._libs.lib.map_infer\n"]}]